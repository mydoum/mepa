<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
">
    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="fr.epita.sigl.mepa.core"/>

    <beans profile="dev">
        <!-- In memory database -->
        <bean id="devDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="org.h2.Driver"/>
            <property name="url" value="jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;MODE=PostgreSQL"/>
            <property name="username" value="sa"/>
            <property name="password" value=""/>
        </bean>

        <bean id="devSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            <property name="dataSource" ref="devDataSource"/>
            <property name="packagesToScan" value="fr.epita.sigl.mepa.core.domain"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                    <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                    <prop key="hibernate.show_sql">true</prop>
                </props>
            </property>
        </bean>

        <tx:annotation-driven transaction-manager="devTransactionManager"/>
        <!-- Declare a transaction manager -->
        <bean id="devTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
              p:sessionFactory-ref="devSessionFactory"/>
    </beans>

    <beans profile="staging">
        <!-- PostgreSQL database -->
        <bean class="java.net.URI" id="stagingDatabaseUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>

        <bean id="stagingDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url"
                      value="#{ 'jdbc:postgresql://' + @stagingDatabaseUrl.getHost() + ':' + @stagingDatabaseUrl.getPort() + @stagingDatabaseUrl.getPath() }"/>
            <property name="username" value="#{ @stagingDatabaseUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @stagingDatabaseUrl.getUserInfo().split(':')[1] }"/>
        </bean>

        <bean id="stagingSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            <property name="dataSource" ref="stagingDataSource"/>
            <property name="packagesToScan" value="fr.epita.sigl.mepa.core.domain"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                    <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                    <prop key="hibernate.show_sql">false</prop>
                </props>
            </property>
        </bean>

        <tx:annotation-driven transaction-manager="stagingTransactionManager"/>
        <!-- Declare a transaction manager -->
        <bean id="stagingTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
              p:sessionFactory-ref="stagingSessionFactory"/>
    </beans>

</beans>